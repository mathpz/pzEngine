# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  pzEngine_Core_config = debug
  First_App_config = debug

else ifeq ($(config),release)
  pzEngine_Core_config = release
  First_App_config = release

else ifeq ($(config),dist)
  pzEngine_Core_config = dist
  First_App_config = dist

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := pzEngine-Core First-App

.PHONY: all clean help $(PROJECTS) Core

all: $(PROJECTS)

Core: pzEngine-Core

pzEngine-Core:
ifneq (,$(pzEngine_Core_config))
	@echo "==== Building pzEngine-Core ($(pzEngine_Core_config)) ===="
	@${MAKE} --no-print-directory -C pzEngine-Core -f Makefile config=$(pzEngine_Core_config)
endif

First-App: pzEngine-Core
ifneq (,$(First_App_config))
	@echo "==== Building First-App ($(First_App_config)) ===="
	@${MAKE} --no-print-directory -C App -f Makefile config=$(First_App_config)
endif

clean:
	@${MAKE} --no-print-directory -C pzEngine-Core -f Makefile clean
	@${MAKE} --no-print-directory -C App -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo "  dist"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   pzEngine-Core"
	@echo "   First-App"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"